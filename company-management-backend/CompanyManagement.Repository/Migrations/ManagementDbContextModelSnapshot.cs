// <auto-generated />
using CompanyManagement.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompanyManagement.Repository.Migrations
{
    [DbContext(typeof(ManagementDbContext))]
    partial class ManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyManagement.Repository.Entity.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("city");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("company_name");

                    b.Property<int>("CompanyNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("company_no");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("CompanyNo"));

                    b.Property<int>("IndustryId")
                        .HasColumnType("integer")
                        .HasColumnName("industry_id");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("level");

                    b.Property<string>("ParentCompany")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("None")
                        .HasColumnName("parent_company");

                    b.Property<int>("TotalEmployees")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.ToTable("company", (string)null);
                });

            modelBuilder.Entity("CompanyManagement.Repository.Entity.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("industry_name");

                    b.HasKey("Id");

                    b.ToTable("industry", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IndustryName = "Meat processing"
                        },
                        new
                        {
                            Id = 2,
                            IndustryName = "Gardening and landscaping"
                        },
                        new
                        {
                            Id = 3,
                            IndustryName = "IT services"
                        },
                        new
                        {
                            Id = 4,
                            IndustryName = "Aerospace technology"
                        },
                        new
                        {
                            Id = 5,
                            IndustryName = "Consumer electronics"
                        });
                });

            modelBuilder.Entity("CompanyManagement.Repository.Entity.Company", b =>
                {
                    b.HasOne("CompanyManagement.Repository.Entity.Industry", "Industry")
                        .WithMany("Companys")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("CompanyManagement.Repository.Entity.Industry", b =>
                {
                    b.Navigation("Companys");
                });
#pragma warning restore 612, 618
        }
    }
}
