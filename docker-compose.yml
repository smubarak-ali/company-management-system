version: '3.8'
services:
  api-app:
    build:
      context: .
      dockerfile: Dockerfile_API
    container_name: comp_management_api
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - dev_network
    environment:
      CONNECTION_STR: 'Host=db; Database=company-management; Username=mubarak; Password=mubarak@123'
      ApiKey: 'mubarak'
  db:
    image: postgres:16-alpine
    container_name: db_postresql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
    ports:
      - "5432:5432"
    networks:
      - dev_network
    environment:
      POSTGRES_USER: mubarak
      POSTGRES_PASSWORD: mubarak@123
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_DB: company-management
      PGPORT: 5432
    volumes:
      -  /c/codes/arvato/db:/var/lib/postgresql/data:rw
  # web-app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile_WebApp
  #   container_name: comp_management_web_app
  #   restart: always
  #   volumes:
  #     -  /c/codes/arvato/db:/var/lib/postgresql/data:rw
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - dev_network
networks:
  dev_network:
    name: dev_network